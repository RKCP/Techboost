package com.vodafone.centralvulnerabilityreporting;

import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.client.MongoDatabase;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Node;
import org.jsoup.select.Elements;

import java.io.IOException;
import java.util.ArrayList;

public class CentralVulnerabilityReportingApplication {

    // Create MongoClient
    private static final MongoClientURI uri = new MongoClientURI("mongodb+srv://techboost:pw@myfirstcluster.ophuz.mongodb.net/test?retryWrites=true&w=majority");
    private static final MongoClient mongoClient = new MongoClient(uri);

    // Connecting to the database
    private static final MongoDatabase database = mongoClient.getDatabase("test");


    public static void main(String[] args) {
        scrapeFromHTML();
    }

    /**
     * Crawler web data
     */
    public static void scrapeFromHTML() {

        // Get webpage title
        String title = "";

        // JSoup - Reading HTML page from URL
        Document doc = null;
        try {
            doc = Jsoup.connect("https://www.mrmoneymustache.com/2013/02/22/getting-rich-from-zero-to-hero-in-one-blog-post/").get();
        } catch (IOException e) {
            e.printStackTrace();
        }

        title = doc.title();
        Elements webpageText = doc.getElementsByClass("post_content");

        // String arraylist for webpage content
        ArrayList<String> webpageParagraphs = new ArrayList<>();

        // counter
        int count = 0;

        Node parentNode = webpageText.get(0);

        while (count < parentNode.childNodeSize()) {
            Node currentChildNode = parentNode.childNode(count);
            if (currentChildNode.toString().startsWith("<p>")) {
                webpageParagraphs.add(currentChildNode.toString());
            }
            count++;
        }

        // counter for system out
        int counter = 1;
        // Add content to MongoDB
        for (String content : webpageParagraphs) {
            addToDatabase(title, content, counter);
            counter++;
        }


        // TODO: implement this with actual html security report
        // JSoup - Parsing an HTML file in Java
//        Document htmlFile = null;
//        try {
//            htmlFile = Jsoup.parse(new File("login.html"), "ISO-8859-1");
//        } catch (IOException e) {
//            e.printStackTrace();
//        } // right
//        title = htmlFile.title();
//        Element div = htmlFile.getElementById("login");
//        String cssClass = div.className(); // getting class form HTML element
//
//        System.out.println("Jsoup can also parse HTML file directly");
//        System.out.println("title : " + title);
//        System.out.println("class of div tag : " + cssClass);
    }

    /**
     * Database operation
     *
     * @param title for the webpage
     * @param content the content from the webpage
     * @param counter number of documents dumped into db
     */
    public static void addToDatabase(String title, String content, int counter) {
        try {// need to change to MySQL GCP later on

            // Check if collection exists, if not create collection to dump data in
            boolean collectionExists = database.listCollectionNames().into(new ArrayList<String>()).contains("testVulnerabilityDump");
            if (!collectionExists) {
                database.createCollection("testVulnerabilityDump");
            }

            // Prepare document for data dump
            org.bson.Document document = new org.bson.Document();
            document.append("title", title);
            document.append("content", content);

            // Insert the document into the collection
            database.getCollection("testVulnerabilityDump").insertOne(document);
            System.out.println("Document " + counter + "inserted successfully.");

        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Database Access Failed!");
        }
    }
}